# version: '3.3'
services:
  db:
    # image: mysql:5.7
    image: mysql:8.4.3
    # restart: always
    environment:
      MYSQL_DATABASE: 'products-api-db'
      # So you don't have to use root, but you can if you like, por defecto crea un usuario root, por lo que sea crea nuevamente, solo hace falta establecer su contrase√±a
      # MYSQL_USER: ''
      # You can use whatever password you like
      # MYSQL_PASSWORD: ''
      # Password for root access
      MYSQL_ROOT_PASSWORD: '1234'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      # - my-db:/var/lib/mysql
      # - ./my-db-data:/var/lib/mysql
      - db-data:/var/lib/mysql
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    # No hace falta, porque en el Dockerfile ya genera la imagen de node (FROM node:23-alpine)
    # image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    ports:
      - "3000:3000"
    depends_on:
      - db
    volumes:
      # - .:/home/node/app
      # - ./node_modules:/home/node/app/node_modules
      - .:/app
      - ./node_modules:/app/node_modules
    # networks:
    #   - app-network
    # command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js
    # command: /app/node_modules/.bin/nodemon app.js
    # Para ejecutar el proyecto con nodemon
    command: npm run init
# Names our volume
volumes:
  db-data:
#   my-db: /var/lib/mysql
  # my-db: ./my-db-data